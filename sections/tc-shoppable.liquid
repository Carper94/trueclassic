{{ 'tc-shoppable.css' | asset_url | stylesheet_tag }}

{% liquid 

  assign bg_color               = section.settings.bg_color
  assign text_color             = section.settings.text_color
  assign bubble_bg_color        = section.settings.bubble_bg_color
  assign dot_color              = section.settings.dot_color
  assign enable_dots            = section.settings.enable_dots
  assign extra_callout_color    = section.settings.extra_callout_color
  assign breakpoint             = section.settings.breakpoint
  assign image_desktop          = section.settings.image_desktop
  assign image_mobile           = section.settings.image_mobile
  assign padding_x              = section.settings.padding_x
  assign padding_y              = section.settings.padding_y   

  assign image_desktop_height = image_desktop.width | divided_by: image_desktop.aspect_ratio
  assign image_mobile_height = image_mobile.width | divided_by: image_mobile.aspect_ratio

-%}

{% style %}

[data-section-id="{{ section.id }}"] {
  background-color: {{ bg_color }};
  padding: {{ padding_y }}px {{ padding_x }}px;
}

[data-section-id="{{ section.id }}"] .tc-shoppable {
  max-width: var(--container-width);
  margin: 0 auto;
  color: {{ text_color }} !important;
}

[data-section-id="{{ section.id }}"] .tap-bubble {
  background-color: {{ bubble_bg_color | hex_to_rgba: 0.85 }};
}

[data-section-id="{{ section.id }}"] .tc-shoppable .dot {
  background-color: {{ dot_color | hex_to_rgba: 0.75 }};
}

[data-section-id="{{ section.id }}"] svg {
  fill: {{ text_color }};
}

 @media screen and (max-width: {{ breakpoint }}px) {
  [data-section-id="{{ section.id }}"] {
    background-color: {{ bg_color }};
    padding: {{ padding_y |  divided_by: 2 }}px {{ padding_x |  divided_by: 2 }}px;
  }
 }

{% if image_mobile != blank %}

  @media screen and (max-width: {{ breakpoint }}px) {
    [data-section-id="{{ section.id }}"] .tc-shoppable .desktop {
      display: none;
    }
    [data-section-id="{{ section.id }}"] .tc-shoppable .mobile {
      display: block;
    }
  }

{% endif %}

/* section scoped block css */
{% for block in section.blocks %}

  [data-section-id="{{ section.id }}"] .bubble--{{ forloop.index }} {
    left: {{ block.settings.left_d }}%;
    top: {{ block.settings.top_d }}%;
  }

 
    @media screen and (max-width: {{ breakpoint }}px) {
      [data-section-id="{{ section.id }}"] .bubble--{{ forloop.index }} {
        left: {{ block.settings.left_m }}%;
        top: {{ block.settings.top_m }}%;
      }
      [data-section-id="{{ section.id }}"] .tc-shoppable .dot--{{ forloop.index }} {
        left: {{ block.settings.mobile_dot_alignment }}%;
      }
    }


{% endfor %}

{% endstyle %}

<div data-section-id="{{ section.id }}">
  <div class="tc-shoppable">
    <div class="shoppable-img-wrapper">
      {% if image_desktop != blank %}
        {{
          image_desktop
          | image_url: width: 3000
          | image_tag:
            width: image_desktop.width,
            height: image_desktop_height,
            class: "desktop",
            sizes: "100vw",
            loading: "lazy",
            widths: '165, 265, 360, 535, 750, 1070, 1500, 1780, 2000, 3000, 3800',
            alt: image_desktop.alt
          | escape
        }}
      {% endif %}
      {% if image_mobile != blank %}
        {{
          image_mobile
          | image_url: width: 1500
          | image_tag:
            width: image_mobile.width,
            height: image_mobile_height,
            class: "mobile",
            sizes: "100vw",
            loading: "lazy",
            widths: '165, 265, 360, 535, 750, 1070, 1500, 1780, 2000, 3000',
            alt: image_mobile.alt
          | escape
        }}
      {% endif %}
    </div>
    <div class="point-layer">
      {% for block in section.blocks %}
        {% assign product = all_products[block.settings.product] %}

        <div class="tap-bubble-container bubble--{{ forloop.index }}">
          {% if enable_dots %}
            <span class="dot dot--{{ forloop.index }}"></span>
          {% endif %}
          <a href="{{ product.url }}" class="tap-bubble shoppable-link">
            <p>
            {% if block.settings.title != blank %}
                {{ block.settings.title }}
            {% else %}
                {{ product.title }}
            {% endif %}
            </p>
            {% if block.settings.extra_callout != blank %}
              <span>{{ block.settings.extra_callout }}</span>
            {% endif %}
            <span class="arrow-left svg-container">
              {% render 'icon-double-arrow-right' %}
            </span>
          </a>
        </div>
      {% endfor %}
    </div>
    <div class="tap-bubble bag svg-container">
      {% render 'icon-shopping-bag' %}
    </div>
  </div>
</div>

<script>

window.addEventListener('DOMContentLoaded', () => {

  const section = document.querySelector('[data-section-id="{{ section.id }}"] .tc-shoppable')
  const bubbles = document.querySelectorAll('.tap-bubble-container')

  section.addEventListener('click', (e) => {
    // if the closest anchor is a shoppable link, we are clicking the anchor and dont want to toggle. If it 
    // is null, then we aren't clicking an anchor and want to toggle.
    if(e.target.closest('a') === null) {
      section.classList.toggle('active')
    }
  })

})

</script>

{% schema %}
{
  "name": "TC Shoppable",
  "settings": [
    {
      "type": "header",
      "content": "Color Settings"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Section Background Color",
      "default": "#fffae9"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Section Text Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Pre Click Dot Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "bubble_bg_color",
      "label": "Bubble Background Color",
      "default": "#53433A"
    },
    {
      "type": "header",
      "content": "Section Padding Options",
      "info": "If only desktop image is added, desktop image will scale down when on mobile"
    },
    {
      "type": "number",
      "id": "padding_y",
      "label": "Vertical Padding",
      "info": "This padding is divided by 2 for mobile",
      "default": 0
    },
    {
      "type": "number",
      "id": "padding_x",
      "label": "Horizontal Padding",
      "info": "This padding is divided by 2 for mobile",
      "default": 0
    },
    {
      "type": "header",
      "content": "Image Settings",
      "info": "If only desktop image is added, desktop image will scale down when on mobile"
    },
    {
      "type": "checkbox",
      "id": "enable_dots",
      "label": "Enable Pre Click Dots",
      "default": true
    },
    {
      "type": "number",
      "id": "breakpoint",
      "label": "Breakpoint (if mobile image exists)",
      "default": 992
    },
    {
      "type": "image_picker",
      "id": "image_desktop",
      "label": "Image (desktop)"
    },
    {
      "type": "image_picker",
      "id": "image_mobile",
      "label": "Image (mobile)"
    }
  ],
  "blocks": [
    {
      "type": "sale-point",
      "name": "Sale Point",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product in image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Alt Title (uses product title if blank)",
          "info": "I would highly encourage using this on every product, as at it shortens the often lengthy product title, which can have unintended effects on the length and containing of the bubbles, especially on mobile."
        },
        {
          "type": "text",
          "id": "extra_callout",
          "label": "Extra Callout (optional)"
        },
        {
          "type": "header",
          "content": "Position of product bubbles",
          "info": "It's important to mention that sometimes the dots will stop before the edges of the image, even if the bubble / dot is set to be 0% from the left or top. This is because once clicked, and the bubble expands, we need to ensure that the bubble + text does not spill outside of the viewport."
        },
        {
          "type": "range",
          "id": "left_d",
          "label": "Desktop bubble % from left of image",
          "default": 0,
          "min": 0,
          "max": 100,
          "step": 1
        },
        {
          "type": "range",
          "id": "top_d",
          "label": "Desktop bubble % from top of image",
          "default": 0,
          "min": 0,
          "max": 100,
          "step": 1
        },
        {
          "type": "range",
          "id": "mobile_dot_alignment",
          "label": "Mobile Dot Alignmnt",
          "info": "Specifies where the dot is aligned on mobile (on the left of the bubble, center or middle). This helps position the bubbles to ensure they stay in viewport on mobile. This should be used in tandem with the alt title and % positionings below. Mobile should be QAd thoroughly to make sure activated product bubbles don't fall out of viewport",
          "min": 0,
          "max": 100,
          "step": 1,
          "default": 50
        },
        {
          "type": "range",
          "id": "left_m",
          "label": "Mobile bubble % from left of image",
          "default": 0,
          "min": 0,
          "max": 100,
          "step": 1
        },
        {
          "type": "range",
          "id": "top_m",
          "label": "Mobile bubble % from top of image",
          "default": 0,
          "min": 0,
          "max": 100,
          "step": 1
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "TC Shoppable"
    }
  ]
}
{% endschema %}