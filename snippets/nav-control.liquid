{% case control %}
  {% when 'primary-toggle' %}
    <button
      id='primary-nav-toggle'
      class='mobile-only--header utility-link utility-link--hamburger hamburger-wrap primary-nav-toggle'
      data-primary-nav-toggle
      aria-expanded='false'
    >
      <svg
        width='18'
        height='18'
        viewBox='0 0 24 18'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <line x1="0.625" y1="17.375" x2="23.375" y2="17.375" stroke="currentColor" stroke-width="1.25" stroke-linecap="round"/>
        <line x1="0.625" y1="9.375" x2="23.375" y2="9.375" stroke="currentColor" stroke-width="1.25" stroke-linecap="round"/>
        <line x1="0.625" y1="1.375" x2="23.375" y2="1.375" stroke="currentColor" stroke-width="1.25" stroke-linecap="round"/>
      </svg>

      <span class='visually-hidden'>Open primary navigation menu</span>
    </button>

  {% when 'back-button' %}
    {% if label != blank %}
      {% capture button_text %}Close {{ label }} menu{% endcapture %}
    {% else %}
      {% assign button_text = 'Close menu' %}
    {% endif %}
    <li class='nav-item nav-control-wrapper'>
      <button class='nav-control back-button' data-nav-close>
        {%- render 'icon-chevron' -%}
        <span class='visually-hidden'>{{ button_text }}</span>
      </button>
    </li>

  {% when 'subnav-trigger' %}
    <button
      type='button'
      class='nav-control subnav-trigger'
      data-subnav-trigger
      aria-expanded='false'
    >
      {%- render 'icon-chevron' -%}
      <span class='visually-hidden'>Show submenu for {{ label }}</span>
    </button>
{% endcase %}

<button
  id='nav__tab--search-mobile'
  class='nav__tab mobile-only--header icon-button'
  type='button'
>
  <span class='visually-hidden'>Open Searchbar</span>
  {% render 'icon-search' id="searchbar--desktop" %}
</button>

<div class='searchbar-wrapper--mobile'>
  <div class='mobile-nav__search'>
    {% render 'searchbar', id: 'searchbar--mobile' %}
    {% render 'instant-search-dropdown', mode: 'mobile', controller: 'searchbar--mobile' %}
  </div>
</div>

<style>
  .searchbar-wrapper--mobile {
    position: absolute;
    top: -100px;
    left: 0;
    right: 0;
    padding: 0 20px;
    background-color: #fff;
    opacity: 0;
    -webkit-transition: top 150ms ease-in-out 150ms, opacity 150ms ease-in-out;
    -o-transition: top 150ms ease-in-out 150ms, opacity 150ms ease-in-out;
    transition: top 150ms ease-in-out 150ms, opacity 150ms ease-in-out;
  }

  .searchbar-wrapper--mobile.active {
    top: 58px;
    opacity: 1;
    -webkit-transition: top 150ms ease-in-out, opacity 150ms ease-in-out 150ms;
    -o-transition: top 150ms ease-in-out, opacity 150ms ease-in-out 150ms;
    transition: top 150ms ease-in-out, opacity 150ms ease-in-out 150ms;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const searchButton = document.getElementById('nav__tab--search-mobile');
    const searchbarWrapper = document.querySelector('.searchbar-wrapper--mobile');
    const searchInput = document.getElementById('searchbar--mobile');

    if (searchButton && searchbarWrapper && searchInput) {
      searchButton.addEventListener('click', function (event) {
        event.stopPropagation();
        
        searchbarWrapper.classList.toggle('active');
        if (searchbarWrapper.classList.contains('active')) {
          searchInput.focus();
        } else {
          searchInput.blur();
        }
      });
      
      document.addEventListener('click', function (event) {
        if (!searchbarWrapper.contains(event.target) && event.target !== searchButton) {
          searchbarWrapper.classList.remove('active');
          searchInput.blur();
        }
      });
    }
  });
</script>